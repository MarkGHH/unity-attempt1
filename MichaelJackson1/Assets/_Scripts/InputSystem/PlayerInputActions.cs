//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/_Scripts/InputSystem/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""eabe809d-11a0-4110-bd26-126a48f26ff3"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""6064c397-6b60-4b9d-b7ec-45d0fba32f51"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""91df2f9a-b98c-473e-8b6b-c16b79ce5ef5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""6df6da4e-4971-4d56-8ed2-d92ba9ecc8a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""2fe62598-e5e3-4c3c-957e-d7e6f3b6a48d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UI Mode"",
                    ""type"": ""Button"",
                    ""id"": ""2ed143bb-00fe-4cfa-af94-8d8443630ce1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 1"",
                    ""type"": ""PassThrough"",
                    ""id"": ""76df91a3-63e3-44dd-b0d0-edd4942c95a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 2"",
                    ""type"": ""PassThrough"",
                    ""id"": ""75156f83-d00e-4409-8bd5-b7d5c51c4b4a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 3"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8e0727fc-9961-4bfb-b550-b4fd7d6dc341"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 4"",
                    ""type"": ""PassThrough"",
                    ""id"": ""858f1e54-16d5-4a59-b036-463f8e646c06"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 5"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ba36d21c-895b-49b9-b6bf-a20759928676"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 6"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ca9f77db-cbff-4e52-aedb-680d3213960a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 7"",
                    ""type"": ""PassThrough"",
                    ""id"": ""de8d0ac7-62dd-4d06-90f2-8f817c7b6ce7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 8"",
                    ""type"": ""PassThrough"",
                    ""id"": ""25557db1-b421-4700-ae73-56082427dbc5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 9"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7c5e637c-cdc5-4641-91c3-a7c8efa873db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 10"",
                    ""type"": ""PassThrough"",
                    ""id"": ""80a15c34-9e16-458f-b8d0-43025cdd8c9d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse Wheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e9377b4f-af24-4f38-9a46-307340c4cbf4"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Perform Action"",
                    ""type"": ""Button"",
                    ""id"": ""a1c5f744-8e5f-46f8-92e8-9ccba3332827"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel Action"",
                    ""type"": ""Button"",
                    ""id"": ""fe3f8823-d270-46c9-96f9-a75142ee6cdd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse Position"",
                    ""type"": ""Value"",
                    ""id"": ""01cd7e20-1392-431d-806b-3ff68c9fe107"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Building Mode"",
                    ""type"": ""Button"",
                    ""id"": ""80f47ce4-7ffa-468c-863b-9421feaa7ac7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Backpack"",
                    ""type"": ""Button"",
                    ""id"": ""0886fc89-596f-4305-aa56-7cd7d2271dc9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""978bfe49-cc26-4a3d-ab7b-7d7a29327403"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""00ca640b-d935-4593-8157-c05846ea39b3"",
                    ""path"": ""Dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e2062cb9-1b15-46a2-838c-2f8d72a0bdd9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8180e8bd-4097-4f4e-ab88-4523101a6ce9"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""320bffee-a40b-4347-ac70-c210eb8bc73a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1c5327b5-f71c-4f60-99c7-4e737386f1d1"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d2581a9b-1d11-4566-b27d-b92aff5fabbc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2e46982e-44cc-431b-9f0b-c11910bf467a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fcfe95b8-67b9-4526-84b5-5d0bc98d6400"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""77bff152-3580-4b21-b6de-dcd0c7e41164"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2d6225d4-48aa-4def-8eff-e9ebf8af9fbd"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""898f98cd-eae9-48f5-b39c-924ae7a66a9b"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f8bdeafe-fb33-4929-94c7-0932ccdd34e6"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b66d1ed7-7dbf-4793-8e60-4e4ac09f37b4"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3216d2d6-5e23-4bd7-a73c-eaebcffbce4a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a429f03-62cd-4a72-8165-e18612c77940"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb6126ad-2a33-48da-b933-cf3fc0f975c8"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""UI Mode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5272c1b-c2dc-4415-bd3f-cba44b8a3384"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UI Mode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8dea2cc-bf95-4e7a-a6c4-312825834c1d"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotbar 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""770781bd-05aa-47d8-a44d-0d918ca93980"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotbar 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b994341-d88f-47e9-a582-27406e6c0092"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotbar 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""334ecebe-526a-461d-ba5a-897c34249c72"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotbar 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a63515d0-577b-43b4-8e5e-15c6bc2e8e6c"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotbar 5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ee38112-2783-44af-b984-d941ae948f94"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotbar 6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebf67fd9-583e-4a57-9352-0dd01fbf1429"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar 7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc6837f7-1b22-4c48-81a6-519175634f89"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotbar 8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""413941f1-083c-48ce-a8a0-25730b74a3b9"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotbar 9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34c0c226-678b-4e7c-9150-0c3c7aacb90f"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotbar 10"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4671316-739f-47e1-bfa5-6ca29d5aa7e4"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Mouse Wheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""090aad92-1569-44b0-830d-b78490a926f1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Perform Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4fe65a07-b4ac-4fa3-b0e6-a62f9e775dec"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Cancel Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd22d82c-3627-4683-997c-6ca843f64db2"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Mouse Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18ac7f8d-3c1e-4848-8ad1-4164b110618f"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Building Mode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67043517-a372-4c82-a1f7-464190e510c8"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Backpack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""1b15b81b-2ef7-4a0d-8110-c88e3d92ae7f"",
            ""actions"": [
                {
                    ""name"": ""Exit UI"",
                    ""type"": ""Button"",
                    ""id"": ""019b9565-ab04-4b82-adb2-6477f8a7d0b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""06a3e5ac-c058-4b2e-a306-d74f485f2793"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Exit UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a741210-0e46-44cb-bfdc-123c7f0d91a0"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Exit UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Interacting"",
            ""id"": ""53618fa2-4220-44fe-820a-302fbd58773f"",
            ""actions"": [
                {
                    ""name"": ""Continue interaction"",
                    ""type"": ""Button"",
                    ""id"": ""5cb4c5de-c2ec-4f12-8eb1-9c1cb1fc6309"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel Action"",
                    ""type"": ""Button"",
                    ""id"": ""83824fbf-3ed5-4578-8543-70df57d868b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Perform Action"",
                    ""type"": ""Button"",
                    ""id"": ""6ab7d204-87a4-4179-a6b8-2eb5d8f5d911"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Exit Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""a3f47356-6a28-4fb9-bb6e-5c423be1b249"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""72604430-f391-4c74-a881-819f383fe836"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Continue interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3aa164b-28f2-47e2-9465-ee7a83f78fa8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Continue interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b6e7602-b1b6-4340-a932-4296384c0160"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Exit Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""277d2ea1-ab54-4216-ac30-60715e044547"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Exit Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a9fc045-6d05-42db-a669-79c4ca9347df"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Exit Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""013f3d49-4d7f-4f5f-8c87-dba799fefc0e"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Perform Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8e4f075-04e2-4510-8647-f35602ca654b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Cancel Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Building"",
            ""id"": ""0afb8e48-f910-4d6b-b2c4-979a0f9b6412"",
            ""actions"": [
                {
                    ""name"": ""Mouse Position Building"",
                    ""type"": ""Value"",
                    ""id"": ""4eaae6ae-1eb4-4d1a-b92a-226b5f9567e2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Cancel Action"",
                    ""type"": ""Button"",
                    ""id"": ""52e2bc94-20d5-4ece-8e7d-586adbd9af50"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Perform Action"",
                    ""type"": ""Button"",
                    ""id"": ""5a4f3d89-78c0-4eec-a4a2-410c895bec17"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Next Item"",
                    ""type"": ""Button"",
                    ""id"": ""62e6bb6c-fb6c-4ffc-a830-4d155c8d29f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Previous Item"",
                    ""type"": ""Button"",
                    ""id"": ""671fd099-f93c-4904-bc72-7ab007dcb0de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Exit Building"",
                    ""type"": ""Button"",
                    ""id"": ""6358e8e2-9b6b-40f1-8235-8b522a3a6fa7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""ce307746-77f0-4da9-8523-6f0f6a24e30d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""10c1c31d-1576-4b4a-a76c-abcb7abe5217"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Mouse Position Building"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18107330-e2ff-43fe-a493-de61c5f057e4"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Cancel Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b9ba972-506d-4f21-a4b9-f32e836c764f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Perform Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""829ee111-5a49-4165-9501-528917d537a9"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Next Item"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a81c0e27-c6ad-41c0-8476-258d64e10b46"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Previous Item"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e06cf4aa-9319-4245-acf7-19366eb7acf7"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Exit Building"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48acb142-1990-4448-868d-01a67f4ef181"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""0dd3195c-d07c-4603-b844-70a5d7bee95c"",
                    ""path"": ""Dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fc0175dc-be1c-452a-b3ad-694f2eb6b3ef"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2b0b6a01-20df-455d-8040-2422b7dbc313"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b9e92d46-884d-46ce-8985-ae5fc7730856"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8e7124db-8e0c-490c-b863-b0d63e8856fe"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a27503bd-c420-4d17-bbe2-b82634ef6337"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9dd1ebc0-5afb-4ece-abbb-90d862046ed4"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c7ced673-bcd7-4ef4-8385-211fae417b38"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7bd7ac31-a03e-430b-86a1-02d7b1dcf2b9"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Move = m_Gameplay.FindAction("Move", throwIfNotFound: true);
        m_Gameplay_Interact = m_Gameplay.FindAction("Interact", throwIfNotFound: true);
        m_Gameplay_Run = m_Gameplay.FindAction("Run", throwIfNotFound: true);
        m_Gameplay_Dash = m_Gameplay.FindAction("Dash", throwIfNotFound: true);
        m_Gameplay_UIMode = m_Gameplay.FindAction("UI Mode", throwIfNotFound: true);
        m_Gameplay_Hotbar1 = m_Gameplay.FindAction("Hotbar 1", throwIfNotFound: true);
        m_Gameplay_Hotbar2 = m_Gameplay.FindAction("Hotbar 2", throwIfNotFound: true);
        m_Gameplay_Hotbar3 = m_Gameplay.FindAction("Hotbar 3", throwIfNotFound: true);
        m_Gameplay_Hotbar4 = m_Gameplay.FindAction("Hotbar 4", throwIfNotFound: true);
        m_Gameplay_Hotbar5 = m_Gameplay.FindAction("Hotbar 5", throwIfNotFound: true);
        m_Gameplay_Hotbar6 = m_Gameplay.FindAction("Hotbar 6", throwIfNotFound: true);
        m_Gameplay_Hotbar7 = m_Gameplay.FindAction("Hotbar 7", throwIfNotFound: true);
        m_Gameplay_Hotbar8 = m_Gameplay.FindAction("Hotbar 8", throwIfNotFound: true);
        m_Gameplay_Hotbar9 = m_Gameplay.FindAction("Hotbar 9", throwIfNotFound: true);
        m_Gameplay_Hotbar10 = m_Gameplay.FindAction("Hotbar 10", throwIfNotFound: true);
        m_Gameplay_MouseWheel = m_Gameplay.FindAction("Mouse Wheel", throwIfNotFound: true);
        m_Gameplay_PerformAction = m_Gameplay.FindAction("Perform Action", throwIfNotFound: true);
        m_Gameplay_CancelAction = m_Gameplay.FindAction("Cancel Action", throwIfNotFound: true);
        m_Gameplay_MousePosition = m_Gameplay.FindAction("Mouse Position", throwIfNotFound: true);
        m_Gameplay_BuildingMode = m_Gameplay.FindAction("Building Mode", throwIfNotFound: true);
        m_Gameplay_Backpack = m_Gameplay.FindAction("Backpack", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_ExitUI = m_UI.FindAction("Exit UI", throwIfNotFound: true);
        // Interacting
        m_Interacting = asset.FindActionMap("Interacting", throwIfNotFound: true);
        m_Interacting_Continueinteraction = m_Interacting.FindAction("Continue interaction", throwIfNotFound: true);
        m_Interacting_CancelAction = m_Interacting.FindAction("Cancel Action", throwIfNotFound: true);
        m_Interacting_PerformAction = m_Interacting.FindAction("Perform Action", throwIfNotFound: true);
        m_Interacting_ExitInteraction = m_Interacting.FindAction("Exit Interaction", throwIfNotFound: true);
        // Building
        m_Building = asset.FindActionMap("Building", throwIfNotFound: true);
        m_Building_MousePositionBuilding = m_Building.FindAction("Mouse Position Building", throwIfNotFound: true);
        m_Building_CancelAction = m_Building.FindAction("Cancel Action", throwIfNotFound: true);
        m_Building_PerformAction = m_Building.FindAction("Perform Action", throwIfNotFound: true);
        m_Building_NextItem = m_Building.FindAction("Next Item", throwIfNotFound: true);
        m_Building_PreviousItem = m_Building.FindAction("Previous Item", throwIfNotFound: true);
        m_Building_ExitBuilding = m_Building.FindAction("Exit Building", throwIfNotFound: true);
        m_Building_Move = m_Building.FindAction("Move", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_Move;
    private readonly InputAction m_Gameplay_Interact;
    private readonly InputAction m_Gameplay_Run;
    private readonly InputAction m_Gameplay_Dash;
    private readonly InputAction m_Gameplay_UIMode;
    private readonly InputAction m_Gameplay_Hotbar1;
    private readonly InputAction m_Gameplay_Hotbar2;
    private readonly InputAction m_Gameplay_Hotbar3;
    private readonly InputAction m_Gameplay_Hotbar4;
    private readonly InputAction m_Gameplay_Hotbar5;
    private readonly InputAction m_Gameplay_Hotbar6;
    private readonly InputAction m_Gameplay_Hotbar7;
    private readonly InputAction m_Gameplay_Hotbar8;
    private readonly InputAction m_Gameplay_Hotbar9;
    private readonly InputAction m_Gameplay_Hotbar10;
    private readonly InputAction m_Gameplay_MouseWheel;
    private readonly InputAction m_Gameplay_PerformAction;
    private readonly InputAction m_Gameplay_CancelAction;
    private readonly InputAction m_Gameplay_MousePosition;
    private readonly InputAction m_Gameplay_BuildingMode;
    private readonly InputAction m_Gameplay_Backpack;
    public struct GameplayActions
    {
        private @PlayerInputActions m_Wrapper;
        public GameplayActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Gameplay_Move;
        public InputAction @Interact => m_Wrapper.m_Gameplay_Interact;
        public InputAction @Run => m_Wrapper.m_Gameplay_Run;
        public InputAction @Dash => m_Wrapper.m_Gameplay_Dash;
        public InputAction @UIMode => m_Wrapper.m_Gameplay_UIMode;
        public InputAction @Hotbar1 => m_Wrapper.m_Gameplay_Hotbar1;
        public InputAction @Hotbar2 => m_Wrapper.m_Gameplay_Hotbar2;
        public InputAction @Hotbar3 => m_Wrapper.m_Gameplay_Hotbar3;
        public InputAction @Hotbar4 => m_Wrapper.m_Gameplay_Hotbar4;
        public InputAction @Hotbar5 => m_Wrapper.m_Gameplay_Hotbar5;
        public InputAction @Hotbar6 => m_Wrapper.m_Gameplay_Hotbar6;
        public InputAction @Hotbar7 => m_Wrapper.m_Gameplay_Hotbar7;
        public InputAction @Hotbar8 => m_Wrapper.m_Gameplay_Hotbar8;
        public InputAction @Hotbar9 => m_Wrapper.m_Gameplay_Hotbar9;
        public InputAction @Hotbar10 => m_Wrapper.m_Gameplay_Hotbar10;
        public InputAction @MouseWheel => m_Wrapper.m_Gameplay_MouseWheel;
        public InputAction @PerformAction => m_Wrapper.m_Gameplay_PerformAction;
        public InputAction @CancelAction => m_Wrapper.m_Gameplay_CancelAction;
        public InputAction @MousePosition => m_Wrapper.m_Gameplay_MousePosition;
        public InputAction @BuildingMode => m_Wrapper.m_Gameplay_BuildingMode;
        public InputAction @Backpack => m_Wrapper.m_Gameplay_Backpack;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @UIMode.started += instance.OnUIMode;
            @UIMode.performed += instance.OnUIMode;
            @UIMode.canceled += instance.OnUIMode;
            @Hotbar1.started += instance.OnHotbar1;
            @Hotbar1.performed += instance.OnHotbar1;
            @Hotbar1.canceled += instance.OnHotbar1;
            @Hotbar2.started += instance.OnHotbar2;
            @Hotbar2.performed += instance.OnHotbar2;
            @Hotbar2.canceled += instance.OnHotbar2;
            @Hotbar3.started += instance.OnHotbar3;
            @Hotbar3.performed += instance.OnHotbar3;
            @Hotbar3.canceled += instance.OnHotbar3;
            @Hotbar4.started += instance.OnHotbar4;
            @Hotbar4.performed += instance.OnHotbar4;
            @Hotbar4.canceled += instance.OnHotbar4;
            @Hotbar5.started += instance.OnHotbar5;
            @Hotbar5.performed += instance.OnHotbar5;
            @Hotbar5.canceled += instance.OnHotbar5;
            @Hotbar6.started += instance.OnHotbar6;
            @Hotbar6.performed += instance.OnHotbar6;
            @Hotbar6.canceled += instance.OnHotbar6;
            @Hotbar7.started += instance.OnHotbar7;
            @Hotbar7.performed += instance.OnHotbar7;
            @Hotbar7.canceled += instance.OnHotbar7;
            @Hotbar8.started += instance.OnHotbar8;
            @Hotbar8.performed += instance.OnHotbar8;
            @Hotbar8.canceled += instance.OnHotbar8;
            @Hotbar9.started += instance.OnHotbar9;
            @Hotbar9.performed += instance.OnHotbar9;
            @Hotbar9.canceled += instance.OnHotbar9;
            @Hotbar10.started += instance.OnHotbar10;
            @Hotbar10.performed += instance.OnHotbar10;
            @Hotbar10.canceled += instance.OnHotbar10;
            @MouseWheel.started += instance.OnMouseWheel;
            @MouseWheel.performed += instance.OnMouseWheel;
            @MouseWheel.canceled += instance.OnMouseWheel;
            @PerformAction.started += instance.OnPerformAction;
            @PerformAction.performed += instance.OnPerformAction;
            @PerformAction.canceled += instance.OnPerformAction;
            @CancelAction.started += instance.OnCancelAction;
            @CancelAction.performed += instance.OnCancelAction;
            @CancelAction.canceled += instance.OnCancelAction;
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
            @BuildingMode.started += instance.OnBuildingMode;
            @BuildingMode.performed += instance.OnBuildingMode;
            @BuildingMode.canceled += instance.OnBuildingMode;
            @Backpack.started += instance.OnBackpack;
            @Backpack.performed += instance.OnBackpack;
            @Backpack.canceled += instance.OnBackpack;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @UIMode.started -= instance.OnUIMode;
            @UIMode.performed -= instance.OnUIMode;
            @UIMode.canceled -= instance.OnUIMode;
            @Hotbar1.started -= instance.OnHotbar1;
            @Hotbar1.performed -= instance.OnHotbar1;
            @Hotbar1.canceled -= instance.OnHotbar1;
            @Hotbar2.started -= instance.OnHotbar2;
            @Hotbar2.performed -= instance.OnHotbar2;
            @Hotbar2.canceled -= instance.OnHotbar2;
            @Hotbar3.started -= instance.OnHotbar3;
            @Hotbar3.performed -= instance.OnHotbar3;
            @Hotbar3.canceled -= instance.OnHotbar3;
            @Hotbar4.started -= instance.OnHotbar4;
            @Hotbar4.performed -= instance.OnHotbar4;
            @Hotbar4.canceled -= instance.OnHotbar4;
            @Hotbar5.started -= instance.OnHotbar5;
            @Hotbar5.performed -= instance.OnHotbar5;
            @Hotbar5.canceled -= instance.OnHotbar5;
            @Hotbar6.started -= instance.OnHotbar6;
            @Hotbar6.performed -= instance.OnHotbar6;
            @Hotbar6.canceled -= instance.OnHotbar6;
            @Hotbar7.started -= instance.OnHotbar7;
            @Hotbar7.performed -= instance.OnHotbar7;
            @Hotbar7.canceled -= instance.OnHotbar7;
            @Hotbar8.started -= instance.OnHotbar8;
            @Hotbar8.performed -= instance.OnHotbar8;
            @Hotbar8.canceled -= instance.OnHotbar8;
            @Hotbar9.started -= instance.OnHotbar9;
            @Hotbar9.performed -= instance.OnHotbar9;
            @Hotbar9.canceled -= instance.OnHotbar9;
            @Hotbar10.started -= instance.OnHotbar10;
            @Hotbar10.performed -= instance.OnHotbar10;
            @Hotbar10.canceled -= instance.OnHotbar10;
            @MouseWheel.started -= instance.OnMouseWheel;
            @MouseWheel.performed -= instance.OnMouseWheel;
            @MouseWheel.canceled -= instance.OnMouseWheel;
            @PerformAction.started -= instance.OnPerformAction;
            @PerformAction.performed -= instance.OnPerformAction;
            @PerformAction.canceled -= instance.OnPerformAction;
            @CancelAction.started -= instance.OnCancelAction;
            @CancelAction.performed -= instance.OnCancelAction;
            @CancelAction.canceled -= instance.OnCancelAction;
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
            @BuildingMode.started -= instance.OnBuildingMode;
            @BuildingMode.performed -= instance.OnBuildingMode;
            @BuildingMode.canceled -= instance.OnBuildingMode;
            @Backpack.started -= instance.OnBackpack;
            @Backpack.performed -= instance.OnBackpack;
            @Backpack.canceled -= instance.OnBackpack;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_ExitUI;
    public struct UIActions
    {
        private @PlayerInputActions m_Wrapper;
        public UIActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ExitUI => m_Wrapper.m_UI_ExitUI;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @ExitUI.started += instance.OnExitUI;
            @ExitUI.performed += instance.OnExitUI;
            @ExitUI.canceled += instance.OnExitUI;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @ExitUI.started -= instance.OnExitUI;
            @ExitUI.performed -= instance.OnExitUI;
            @ExitUI.canceled -= instance.OnExitUI;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);

    // Interacting
    private readonly InputActionMap m_Interacting;
    private List<IInteractingActions> m_InteractingActionsCallbackInterfaces = new List<IInteractingActions>();
    private readonly InputAction m_Interacting_Continueinteraction;
    private readonly InputAction m_Interacting_CancelAction;
    private readonly InputAction m_Interacting_PerformAction;
    private readonly InputAction m_Interacting_ExitInteraction;
    public struct InteractingActions
    {
        private @PlayerInputActions m_Wrapper;
        public InteractingActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Continueinteraction => m_Wrapper.m_Interacting_Continueinteraction;
        public InputAction @CancelAction => m_Wrapper.m_Interacting_CancelAction;
        public InputAction @PerformAction => m_Wrapper.m_Interacting_PerformAction;
        public InputAction @ExitInteraction => m_Wrapper.m_Interacting_ExitInteraction;
        public InputActionMap Get() { return m_Wrapper.m_Interacting; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InteractingActions set) { return set.Get(); }
        public void AddCallbacks(IInteractingActions instance)
        {
            if (instance == null || m_Wrapper.m_InteractingActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InteractingActionsCallbackInterfaces.Add(instance);
            @Continueinteraction.started += instance.OnContinueinteraction;
            @Continueinteraction.performed += instance.OnContinueinteraction;
            @Continueinteraction.canceled += instance.OnContinueinteraction;
            @CancelAction.started += instance.OnCancelAction;
            @CancelAction.performed += instance.OnCancelAction;
            @CancelAction.canceled += instance.OnCancelAction;
            @PerformAction.started += instance.OnPerformAction;
            @PerformAction.performed += instance.OnPerformAction;
            @PerformAction.canceled += instance.OnPerformAction;
            @ExitInteraction.started += instance.OnExitInteraction;
            @ExitInteraction.performed += instance.OnExitInteraction;
            @ExitInteraction.canceled += instance.OnExitInteraction;
        }

        private void UnregisterCallbacks(IInteractingActions instance)
        {
            @Continueinteraction.started -= instance.OnContinueinteraction;
            @Continueinteraction.performed -= instance.OnContinueinteraction;
            @Continueinteraction.canceled -= instance.OnContinueinteraction;
            @CancelAction.started -= instance.OnCancelAction;
            @CancelAction.performed -= instance.OnCancelAction;
            @CancelAction.canceled -= instance.OnCancelAction;
            @PerformAction.started -= instance.OnPerformAction;
            @PerformAction.performed -= instance.OnPerformAction;
            @PerformAction.canceled -= instance.OnPerformAction;
            @ExitInteraction.started -= instance.OnExitInteraction;
            @ExitInteraction.performed -= instance.OnExitInteraction;
            @ExitInteraction.canceled -= instance.OnExitInteraction;
        }

        public void RemoveCallbacks(IInteractingActions instance)
        {
            if (m_Wrapper.m_InteractingActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInteractingActions instance)
        {
            foreach (var item in m_Wrapper.m_InteractingActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InteractingActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InteractingActions @Interacting => new InteractingActions(this);

    // Building
    private readonly InputActionMap m_Building;
    private List<IBuildingActions> m_BuildingActionsCallbackInterfaces = new List<IBuildingActions>();
    private readonly InputAction m_Building_MousePositionBuilding;
    private readonly InputAction m_Building_CancelAction;
    private readonly InputAction m_Building_PerformAction;
    private readonly InputAction m_Building_NextItem;
    private readonly InputAction m_Building_PreviousItem;
    private readonly InputAction m_Building_ExitBuilding;
    private readonly InputAction m_Building_Move;
    public struct BuildingActions
    {
        private @PlayerInputActions m_Wrapper;
        public BuildingActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @MousePositionBuilding => m_Wrapper.m_Building_MousePositionBuilding;
        public InputAction @CancelAction => m_Wrapper.m_Building_CancelAction;
        public InputAction @PerformAction => m_Wrapper.m_Building_PerformAction;
        public InputAction @NextItem => m_Wrapper.m_Building_NextItem;
        public InputAction @PreviousItem => m_Wrapper.m_Building_PreviousItem;
        public InputAction @ExitBuilding => m_Wrapper.m_Building_ExitBuilding;
        public InputAction @Move => m_Wrapper.m_Building_Move;
        public InputActionMap Get() { return m_Wrapper.m_Building; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BuildingActions set) { return set.Get(); }
        public void AddCallbacks(IBuildingActions instance)
        {
            if (instance == null || m_Wrapper.m_BuildingActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_BuildingActionsCallbackInterfaces.Add(instance);
            @MousePositionBuilding.started += instance.OnMousePositionBuilding;
            @MousePositionBuilding.performed += instance.OnMousePositionBuilding;
            @MousePositionBuilding.canceled += instance.OnMousePositionBuilding;
            @CancelAction.started += instance.OnCancelAction;
            @CancelAction.performed += instance.OnCancelAction;
            @CancelAction.canceled += instance.OnCancelAction;
            @PerformAction.started += instance.OnPerformAction;
            @PerformAction.performed += instance.OnPerformAction;
            @PerformAction.canceled += instance.OnPerformAction;
            @NextItem.started += instance.OnNextItem;
            @NextItem.performed += instance.OnNextItem;
            @NextItem.canceled += instance.OnNextItem;
            @PreviousItem.started += instance.OnPreviousItem;
            @PreviousItem.performed += instance.OnPreviousItem;
            @PreviousItem.canceled += instance.OnPreviousItem;
            @ExitBuilding.started += instance.OnExitBuilding;
            @ExitBuilding.performed += instance.OnExitBuilding;
            @ExitBuilding.canceled += instance.OnExitBuilding;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
        }

        private void UnregisterCallbacks(IBuildingActions instance)
        {
            @MousePositionBuilding.started -= instance.OnMousePositionBuilding;
            @MousePositionBuilding.performed -= instance.OnMousePositionBuilding;
            @MousePositionBuilding.canceled -= instance.OnMousePositionBuilding;
            @CancelAction.started -= instance.OnCancelAction;
            @CancelAction.performed -= instance.OnCancelAction;
            @CancelAction.canceled -= instance.OnCancelAction;
            @PerformAction.started -= instance.OnPerformAction;
            @PerformAction.performed -= instance.OnPerformAction;
            @PerformAction.canceled -= instance.OnPerformAction;
            @NextItem.started -= instance.OnNextItem;
            @NextItem.performed -= instance.OnNextItem;
            @NextItem.canceled -= instance.OnNextItem;
            @PreviousItem.started -= instance.OnPreviousItem;
            @PreviousItem.performed -= instance.OnPreviousItem;
            @PreviousItem.canceled -= instance.OnPreviousItem;
            @ExitBuilding.started -= instance.OnExitBuilding;
            @ExitBuilding.performed -= instance.OnExitBuilding;
            @ExitBuilding.canceled -= instance.OnExitBuilding;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
        }

        public void RemoveCallbacks(IBuildingActions instance)
        {
            if (m_Wrapper.m_BuildingActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IBuildingActions instance)
        {
            foreach (var item in m_Wrapper.m_BuildingActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_BuildingActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public BuildingActions @Building => new BuildingActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_TouchSchemeIndex = -1;
    public InputControlScheme TouchScheme
    {
        get
        {
            if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
            return asset.controlSchemes[m_TouchSchemeIndex];
        }
    }
    private int m_JoystickSchemeIndex = -1;
    public InputControlScheme JoystickScheme
    {
        get
        {
            if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
            return asset.controlSchemes[m_JoystickSchemeIndex];
        }
    }
    private int m_XRSchemeIndex = -1;
    public InputControlScheme XRScheme
    {
        get
        {
            if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
            return asset.controlSchemes[m_XRSchemeIndex];
        }
    }
    public interface IGameplayActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnUIMode(InputAction.CallbackContext context);
        void OnHotbar1(InputAction.CallbackContext context);
        void OnHotbar2(InputAction.CallbackContext context);
        void OnHotbar3(InputAction.CallbackContext context);
        void OnHotbar4(InputAction.CallbackContext context);
        void OnHotbar5(InputAction.CallbackContext context);
        void OnHotbar6(InputAction.CallbackContext context);
        void OnHotbar7(InputAction.CallbackContext context);
        void OnHotbar8(InputAction.CallbackContext context);
        void OnHotbar9(InputAction.CallbackContext context);
        void OnHotbar10(InputAction.CallbackContext context);
        void OnMouseWheel(InputAction.CallbackContext context);
        void OnPerformAction(InputAction.CallbackContext context);
        void OnCancelAction(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnBuildingMode(InputAction.CallbackContext context);
        void OnBackpack(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnExitUI(InputAction.CallbackContext context);
    }
    public interface IInteractingActions
    {
        void OnContinueinteraction(InputAction.CallbackContext context);
        void OnCancelAction(InputAction.CallbackContext context);
        void OnPerformAction(InputAction.CallbackContext context);
        void OnExitInteraction(InputAction.CallbackContext context);
    }
    public interface IBuildingActions
    {
        void OnMousePositionBuilding(InputAction.CallbackContext context);
        void OnCancelAction(InputAction.CallbackContext context);
        void OnPerformAction(InputAction.CallbackContext context);
        void OnNextItem(InputAction.CallbackContext context);
        void OnPreviousItem(InputAction.CallbackContext context);
        void OnExitBuilding(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
    }
}
